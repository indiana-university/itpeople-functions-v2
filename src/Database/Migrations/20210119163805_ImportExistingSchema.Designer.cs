// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Database.Migrations
{
    [DbContext(typeof(PeopleContext))]
    [Migration("20210119163805_ImportExistingSchema")]
    partial class ImportExistingSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id")
                        .HasName("pk_buildings");

                    b.ToTable("buildings");
                });

            modelBuilder.Entity("Models.BuildingRelationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id")
                        .HasName("pk_building_relationships");

                    b.ToTable("building_relationships");
                });

            modelBuilder.Entity("Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_departments");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("Models.HistoricalPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id")
                        .HasName("pk_historical_people");

                    b.ToTable("historical_people");
                });

            modelBuilder.Entity("Models.HrPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Campus")
                        .HasColumnName("campus")
                        .HasColumnType("text");

                    b.Property<string>("CampusEmail")
                        .HasColumnName("campus_email")
                        .HasColumnType("text");

                    b.Property<string>("CampusPhone")
                        .HasColumnName("campus_phone")
                        .HasColumnType("text");

                    b.Property<string>("HrDepartment")
                        .HasColumnName("hr_department")
                        .HasColumnType("text");

                    b.Property<string>("HrDepartmentDescription")
                        .HasColumnName("hr_department_description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("NameFirst")
                        .HasColumnName("name_first")
                        .HasColumnType("text");

                    b.Property<string>("NameLast")
                        .HasColumnName("name_last")
                        .HasColumnType("text");

                    b.Property<string>("Netid")
                        .HasColumnName("netid")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnName("position")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_hr_people");

                    b.ToTable("hr_people");
                });

            modelBuilder.Entity("Models.MemberTool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id")
                        .HasName("pk_unit_member_tools");

                    b.ToTable("unit_member_tools");
                });

            modelBuilder.Entity("Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Campus")
                        .IsRequired()
                        .HasColumnName("campus")
                        .HasColumnType("text");

                    b.Property<string>("CampusEmail")
                        .IsRequired()
                        .HasColumnName("campus_email")
                        .HasColumnType("text");

                    b.Property<string>("CampusPhone")
                        .IsRequired()
                        .HasColumnName("campus_phone")
                        .HasColumnType("text");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("department_id")
                        .HasColumnType("integer");

                    b.Property<string>("Expertise")
                        .HasColumnName("expertise")
                        .HasColumnType("text");

                    b.Property<bool>("IsServiceAdmin")
                        .HasColumnName("is_service_admin")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnName("location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("NameFirst")
                        .IsRequired()
                        .HasColumnName("name_first")
                        .HasColumnType("text");

                    b.Property<string>("NameLast")
                        .IsRequired()
                        .HasColumnName("name_last")
                        .HasColumnType("text");

                    b.Property<string>("Netid")
                        .IsRequired()
                        .HasColumnName("netid")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnName("photo_url")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnName("position")
                        .HasColumnType("text");

                    b.Property<int>("Responsibilities")
                        .HasColumnName("responsibilities")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_people");

                    b.HasIndex("DepartmentId")
                        .HasName("ix_people_department_id");

                    b.ToTable("people");
                });

            modelBuilder.Entity("Models.SupportRelationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id")
                        .HasName("pk_support_relationships");

                    b.ToTable("support_relationships");
                });

            modelBuilder.Entity("Models.Tool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ADPath")
                        .HasColumnName("ad_path")
                        .HasColumnType("text");

                    b.Property<bool>("DepartmentScoped")
                        .HasColumnName("department_scoped")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_tools");

                    b.ToTable("tools");
                });

            modelBuilder.Entity("Models.ToolPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id")
                        .HasName("pk_tool_permissions");

                    b.ToTable("tool_permissions");
                });

            modelBuilder.Entity("Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id")
                        .HasName("pk_units");

                    b.ToTable("units");
                });

            modelBuilder.Entity("Models.UnitMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Permissions")
                        .HasColumnName("permissions")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_unit_members");

                    b.ToTable("unit_members");
                });

            modelBuilder.Entity("Models.Person", b =>
                {
                    b.HasOne("Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("fk_people_departments_department_id");
                });
#pragma warning restore 612, 618
        }
    }
}
