@using System.Net
@implements IDisposable
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager Navigation

@if(IsAuthenticated)
{
	@if(IsExpired)
	{
		<div class="rvt-alert rvt-alert--warning rvt-m-tb-md">
			<h1 class="rvt-alert__title">Session Expired</h1>
			<p class="rvt-alert__message">
				<p>
					Your session has expired.  You will need to login again before making additional requsts.
				</p>
				<p>
					<a class="rvt-button" href="/SignIn?Destination=@(WebUtility.UrlEncode(new Uri(Navigation.Uri).PathAndQuery))">Log In</a>
				</p>

			</p>
		</div>
	}
	
	@Authenticated
}
else
{
	@NotAuthenticated
}

@code {
	[Parameter]
	public RenderFragment Authenticated { get; set; }

    [Parameter]
	public RenderFragment NotAuthenticated { get; set; }

	private AuthenticatedUser User;
	private bool IsAuthenticated => User != null;
	private bool IsExpired => User != null && User.Expires <= DateTimeOffset.Now;

	protected override async Task OnInitializedAsync()
	{
		User = await localStorage.GetItemAsync<AuthenticatedUser>("user");
	}

	public void Dispose()
	{
	}
}