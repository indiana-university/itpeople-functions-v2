# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

variables:
  poolVmImage: 'ubuntu-20.04'


stages:
- stage: Test
  displayName: Test
  pool:
    vmImage: $(poolVmImage)

  jobs: 
    - job: ApiTest
      displayName: API
      steps:
        - task: DotNetCoreCLI@2
          displayName: Unit
          inputs:
            command: test
            projects: tests/API/Unit/Unit.csproj
            
        - task: DotNetCoreCLI@2
          displayName: Integration
          inputs:
            command: test
            projects: tests/API/Integration/Integration.csproj  

- stage: Package
  displayName: Package  
  dependsOn: Test
  condition: succeeded()
  pool:
    vmImage: $(poolVmImage)

  jobs:
  - job: PackageApiApp
    displayName: API Function App
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build API
      inputs:
        command: 'build'
        projects: src/API/API.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/ApiFunctionApp --configuration Release

    - task: ArchiveFiles@2
      displayName: 'Archive API files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/ApiFunctionApp'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/ApiFunctionApp.zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/ApiFunctionApp.zip
      displayName: Publish API Function App Artifacts
      artifact: ApiDeploymentPackage

  - job: PackageTasksApp
    displayName: Tasks Function App
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build Tasks
      inputs:
        command: 'build'
        projects: src/Tasks/Tasks.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/TasksFunctionApp --configuration Release

    - task: ArchiveFiles@2
      displayName: 'Archive Tasks files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/TasksFunctionApp'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/TasksFunctionApp.zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/TasksFunctionApp.zip
      displayName: Publish Tasks Function App Artifacts
      artifact: TasksDeploymentPackage
      
- stage: Deploy
  displayName: Deploy
  dependsOn: Package
  condition: succeeded()
  pool:
    vmImage: $(poolVmImage)

  jobs:
  - job: API
    steps:
    - checkout: scripts

    - task: DownloadPipelineArtifact@2
      displayName: Download Deployment Package
      inputs:
        artifact: 'ApiDeploymentPackage'

    - task: AzureCLI@2
      displayName: Stage
      inputs:
        azureSubscription: '$(azureSubscription)'
        scriptType: pscore
        scriptPath: $(Build.SourcesDirectory)/deploy-app-service.ps1
        arguments: >-
          -ResourceGroup $(resourceGroup) 
          -AppServiceName $(apiFunctionAppName) 
          -DeploymentSlot staging 
          -PackagePath $(Pipeline.Workspace)/ApiFunctionApp.zip 
          -HealthCheckPath "/ping"
    
    - task: AzureCLI@2
      displayName: Swap
      inputs:
        azureSubscription: '$(azureSubscription)'
        scriptType: pscore
        scriptPath: $(Build.SourcesDirectory)/swap-app-service.ps1
        arguments: >-
          -ResourceGroup $(resourceGroup) 
          -AppServiceName $(apiFunctionAppName) 
          -DeploymentSlot staging

  - job: Tasks
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download Deployment Package
      inputs:
        artifact: 'TasksDeploymentPackage'

    - task: AzureFunctionApp@1
      displayName: Publish Tasks Function App
      inputs:
        azureSubscription: '$(azureSubscription)'
        appType: functionApp
        appName: '$(tasksFunctionAppName)'
        package: '$(Pipeline.Workspace)/TasksFunctionApp.zip'
              